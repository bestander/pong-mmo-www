@startuml

package pong-mmo-client {
  package socket.io {
    class socket
  }

  package three.js {
    class THREE
  }
  
  package pong-single-player {
    package events {
      class EventEmitter
    }

    class PongAi {

    }
    package pong-box2d{
      class PongGame {
        +handlePlayerCommand()
        +getObjectPositions()
        +joinPlayer()
        +quitPlayer()
        +getEventsEmitter()
        -_tick()
      }
    }
    package box2dweb {
      class b2World
    }
    PongGame *- b2World
    PongGame *- EventEmitter
    PongAi *- EventEmitter
  }

  package main {
  
    class ServerTimeSync {
      -onMatchUpdate()
      -getClientServerTimeDifference()
      +pipeTimeRelatedEvents(socket, eventEmitter)
    }
    ServerTimeSync *-- socket
    
    class ClientBootstrap {
      +initServerGame(socket, domElement)
      +initLocalGame(PongGame, domElement)
    }
    note bottom: binds a socket.io connection to renderer \n or \n a local pong game event emitter to renderer
    note right: local game is TODO in next release
    
    ClientBootstrap *-- PongGame
    ClientBootstrap *- PongGameRenderer
    ClientBootstrap *-- socket
    ServerTimeSync --* ClientBootstrap

    class PlayerCommandsHandler {
      +movePaddle(direction)
      +ready()
    }
    ClientBootstrap o- PlayerCommandsHandler

    class PongGameRenderer {
      +onGameEntered()
      +onPlayerJoined()
      +onPlayerQuit()
      +onPlayerReady()
      +onMatchUpdate()
    }

    PongGameRenderer *- THREE
        
    class Box2dToCanvas {
      +convertCoordinate(box2dCoord, scale)
    }
    PongGameRenderer *-- Box2dToCanvas

  }

  package AnimationSmoother {

    class ObjectCoordinateInterpolator {
      {static}+updateAll()
      +schedulePosition(pos, delayMillis)
      +onCurrentPositionRequest(callback)
    }
    note right: makes sure the \nanimation is smooth: \ninterpolates and delays
    note bottom: for every moving object in \nPongGameRenderer \nthere is an interpolatior
  }

  PongGameRenderer o-- ObjectCoordinateInterpolator

  package tween.js {
    class TWEEN {
      +to()
      +start()
      +update()
      +onUpdate(callback)
    }
  }
  ObjectCoordinateInterpolator *-- TWEEN
  
}




@enduml